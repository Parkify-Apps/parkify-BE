// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	coreapi "github.com/midtrans/midtrans-go/coreapi"
	mock "github.com/stretchr/testify/mock"
)

// PaymentFunc is an autogenerated mock type for the PaymentFunc type
type PaymentFunc struct {
	mock.Mock
}

// PaymentVABCA provides a mock function with given fields: idBook, price
func (_m *PaymentFunc) PaymentVABCA(idBook string, price int) (*coreapi.ChargeResponse, error) {
	ret := _m.Called(idBook, price)

	if len(ret) == 0 {
		panic("no return value specified for PaymentVABCA")
	}

	var r0 *coreapi.ChargeResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(string, int) (*coreapi.ChargeResponse, error)); ok {
		return rf(idBook, price)
	}
	if rf, ok := ret.Get(0).(func(string, int) *coreapi.ChargeResponse); ok {
		r0 = rf(idBook, price)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*coreapi.ChargeResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string, int) error); ok {
		r1 = rf(idBook, price)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPaymentFunc creates a new instance of PaymentFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentFunc {
	mock := &PaymentFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
